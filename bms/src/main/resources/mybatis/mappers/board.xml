<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.board">

	<!-- 게시글의 개수를 반환하는 쿼리 -->
	<select id="getAllBoardCount" resultType="int">
		<choose>
			<when test="searchKeyword.equals('total')"> <!-- searchKeyword가 전체검색일 경우 -->
				<choose>
					<when test="searchWord.equals('')"> <!--  특정 키워드가 없을경우 (보통의 경우)  -->
						SELECT 
								COUNT(*) 
						FROM 
								T_SHOPPING_BOARD
					</when>
					<otherwise>	<!-- 특정 키워드가 있을 경우 -->
						SELECT 
								COUNT(*) 
						FROM 
								T_SHOPPING_BOARD
						WHERE
                                SUBJECT LIKE '%' || #{searchWord} || '%' OR 
								WRITER LIKE '%'|| #{searchWord} || '%'
					</otherwise>
				</choose>
			</when>
			<otherwise>	<!-- searchKeyword가 전체 검색이 아닐 경우 -->
				SELECT 
						COUNT(*) 
				FROM 
						T_SHOPPING_BOARD 
				WHERE
					<if test="searchKeyword.equals('writer')">
						WRITER LIKE '%' || #{searchWord} || '%'
					</if>
					<if test="searchKeyword.equals('subject')">
						SUBJECT LIKE '%' || #{searchWord} || '%'
					</if>
			</otherwise>
		</choose>	
	</select>

	<!-- 게시글의 내용을 반환하는 쿼리 -->
	<select id="getSearchBoard" resultType="BoardDTO">
		<choose>
			<when test="searchKeyword.equals('total')">	<!-- 전체 검색일 경우 -->
				<choose>
				<when test="searchWord.equals('')"> <!-- 전체 검색중 검색 문자가 없을 경우 -->
				SELECT 
						* 
				FROM (
						SELECT 
								* 
						FROM 
								T_SHOPPING_BOARD
						WHERE
								SUBJECT LIKE '%' || #{searchWord} || '%' OR
								WRITER LIKE '%' || #{searchWord} || '%'
					) 
				WHERE 
						ROWNUM BETWEEN #{startBoardIdx} AND #{onePageViewCount} 
				ORDER BY
						REF DESC,
						RE_STEP 
				</when>
				<otherwise>	<!-- 전체 검색중 검색 문자가 있을 경우 -->
				SELECT 
						* 
				FROM (
						SELECT 
								* 
						FROM 
								T_SHOPPING_BOARD
					) 
				WHERE 
						ROWNUM BETWEEN #{startBoardIdx} AND #{onePageViewCount} 
				ORDER BY 
						REF DESC, 
						RE_STEP
				</otherwise>
				</choose>
			</when>
			<otherwise>	<!-- 서치 키워드를 이용하여 검색하는 경우 -->
				SELECT
						*
				FROM	(
							SELECT
									*
							FROM
									T_SHOPPING_BOARD
							WHERE
								<if test="searchKeyword.equals('writer')">
									WRITER LIKE '%' || #{searchWord} || '%'
								</if>
								<if test="searchKeyword.equals('subject')">
									SUBJECT LIKE '%' || #{searchWord} || '%'
								</if>
						)
				WHERE 
						ROWNUM BETWEEN #{startBoardIdx} AND #{onePageViewCount} 
				ORDER BY 
						REF DESC, 
						RE_STEP
			</otherwise>
		</choose>
	</select>	
	
	
	<insert id="insertBoard" parameterType="java.util.Map"   >
		<selectKey resultType="int" keyProperty="boardId" order="BEFORE">
	    	SELECT 
	    			SEQ_BOARD_ID.NEXTVAL 
	    	FROM 
	    			DUAL
	    </selectKey>			
			INSERT INTO T_SHOPPING_BOARD (
				BOARD_ID,
				WRITER,
				EMAIL,
				SUBJECT,
				PASSWORD,
				REG_DATE,
				REF,
				RE_STEP,
				RE_LEVEL,
				READ_COUNT,
				CONTENT
			)
			VALUES(
				#{boardId},
				#{writer}, 
				#{email}, 
				#{subject}, 
				#{password}, 
				SYSDATE,
				#{ref},
				1, 
				1, 
				0, 				
				#{content}
			)
	</insert>
	
		<!-- 하나의 게시글을 반환하는 쿼리 -->
	<select id="getOneBoard" resultType="BoardDTO">
		SELECT
				*
		FROM
				T_SHOPPING_BOARD
		WHERE
				BOARD_ID=#{boardId}
	</select>
 
 	<!-- 하나의 게시글을 수정하는 쿼리 -->
	<update id="updateBoard">
		UPDATE 
				T_SHOPPING_BOARD 
		SET 
				SUBJECT=#{subject}, 
				CONTENT=#{content} 
		WHERE 
				BOARD_ID=#{boardId}
	</update>

	<!-- 스탭을 옮려주는 쿼리 -->
	<update id="updateBoardReplyStep">
		<![CDATA[
			UPDATE 
					T_SHOPPING_BOARD 
			SET 
					RE_STEP = RE_STEP+1
			WHERE 
					REF = #{ref} AND RE_STEP > #{reStep}
		]]>
	</update>
	

	<!-- 게시글을 삭제하는 쿼리 -->
	<delete id="deleteBoard">
		DELETE FROM 
				T_SHOPPING_BOARD 
		WHERE 
				BOARD_ID=#{boardId}
	</delete>
	
	<!-- 게시글의 비밀번호를 검증하는 쿼리 -->
	<select id="validateUserCheck" resultType="BoardDTO">
		SELECT
				*
		FROM
				T_SHOPPING_BOARD
		WHERE
				BOARD_ID=#{boardId} AND 
				PASSWORD=#{password} 
	</select>
	
	<!-- 게시글 조회시 조회수가 1증가하는 쿼리 -->
	<update id="increaseReadCount">
		UPDATE
				T_SHOPPING_BOARD
		SET
				READ_COUNT = READ_COUNT +1
		WHERE
				BOARD_ID=#{boardId}
	</update>
	
	


	<!-- 댓글을 등록하는 쿼리 -->
	<insert id="insertReplyBoard" parameterType="java.util.Map"   >
		<selectKey resultType="int" keyProperty="boardId" order="BEFORE">
	    	SELECT 
	    			SEQ_BOARD_ID.NEXTVAL 
	    	FROM 
	    			DUAL
	    </selectKey>
		<![CDATA[		
			INSERT INTO 
					T_SHOPPING_BOARD
			VALUES (
					#{boardId},
					#{writer},
					#{email},
					#{subject},
					#{password},
					SYSTIME,
					#{ref},
					#{reStep} + 1,
					#{reLevel} + 1,
					0,
					#{content})
		]]> 			
	</insert>	

</mapper>	
